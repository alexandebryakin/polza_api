type Attachment {
  contentType: String
  createdAt: ISO8601DateTime!
  documentableId: ID
  documentableType: String
  id: Int!
  updatedAt: ISO8601DateTime!
  url: String!
}

"""
Autogenerated return type of CreatePhone
"""
type CreatePhonePayload {
  errors: JSON
  phone: Phone
  status: Status
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Represents untyped JSON
"""
scalar JSON

type Mutation {
  createPhone(number: String!): CreatePhonePayload
  signinUser(email: String!, password: String!): SigninUserPayload
  signupUser(email: String!, password: String!): SignupUserPayload
  upsertPassport(code: String!, firstName: String!, image: Upload!, lastName: String!, middleName: String!, number: String!): UpsertPassportPayload
}

type Passport {
  code: String!
  firstName: String!
  id: ID!
  image: Attachment
  lastName: String!
  middleName: String!
  number: String!
  userId: ID!
  verificationStatus: VerificationStatus!
}

type Phone {
  id: ID!
  number: String!
}

type Query {
  passport(userId: ID!): Passport
  user(userId: ID!): User
}

"""
Autogenerated return type of SigninUser
"""
type SigninUserPayload {
  errors: JSON
  token: String
  user: User
}

"""
Autogenerated return type of SignupUser
"""
type SignupUserPayload {
  errors: JSON
  token: String
  user: User
}

enum Status {
  failure
  success
}

scalar Upload

"""
Autogenerated return type of UpsertPassport
"""
type UpsertPassportPayload {
  errors: JSON
  passport: Passport
  status: Status
}

type User {
  email: String!
  id: ID!
  passport: Passport
  phones: [Phone!]!
}

enum VerificationStatus {
  failed
  in_progress
  succeeded
}
